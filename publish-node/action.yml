name: 'Publish Node App'
description: 'Publish Node App to NPM'
inputs:
  node_version:
    required: true
    description: "The node version to use"
    default: 16.x
  npm_token:
    required: true
    description: "The npm access token"
  user_name:
    required: true
    description: "The user name that will be displayed on npm"
  user_email:
    required: true
    description: "The user email that will be displayed on npm"
  create_release:
    required: false
    description: "Create a release on the repo with notes"
    default: "false"
  publish_docs:
    required: false
    description: "Whether to publish the docs or not"
    default: "false"
  docs_dir:
    required: false
    description: "Folder housing the docs"
    default: "docs"
  token:
    required: false
    description: "A GITHUB Pat used to create the release"
runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v3
  - name: Use Node.js
    uses: actions/setup-node@v3
    with:
      node-version: ${{ inputs.node_version }}
      cache: 'npm'
  - shell: bash
    run: npm ci
  - shell: bash
    run: 'git config user.email "${{ inputs.user_email }}"'
  - shell: bash
    run: 'git config user.name "${{ inputs.user_name }}"'
  - shell: bash
    if: github.ref == 'refs/heads/main'
    run: npm version minor
  - shell: bash
    if: github.ref == 'refs/heads/main'
    run: |
      git push origin HEAD:main --follow-tags
  - shell: bash
    if: ${{ github.ref == 'refs/heads/main' && inputs.create_release == 'true' }}
    run: gh release create $(node -p "require('./package.json').version") --generate-notes
    env:
      GH_TOKEN: ${{ inputs.token }}
  - shell: bash
    run: npm config set //registry.npmjs.org/:_authToken ${{ inputs.npm_token}}
    env:
      NODE_ACCESS_TOKEN: ${{ inputs.npm_token }}
  - shell: bash
    run: npm publish --access public
  - if: ${{ inputs.publish_docs == 'true' }}
    shell: bash
    run: npm run doc
  - if: ${{ inputs.publish_docs == 'true' }}
    name: Setup Pages
    uses: actions/configure-pages@v3
  - if: ${{ inputs.publish_docs == 'true' }}
    name: Upload artifact
    uses: actions/upload-pages-artifact@v1
    with:
      # Upload entire repository
      path: '${{ inputs.docs_dir }}'
  - if: ${{ inputs.publish_docs == 'true' }}
    name: Deploy to GitHub Pages
    id: deployment
    uses: actions/deploy-pages@v3

